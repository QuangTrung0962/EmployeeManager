@using PagedList.Mvc;
@model DTO.PageList<DTO.ViewModels.EmployeeViewModel>

@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@{
    Html.RenderPartial("_Notification");
}

<div class="p-3" style="border :1px solid #ccc; min-height: 250px">
    <div class="row">
        <h2>Danh sách nhân viên</h2>

        <p>
            @Html.ActionLink("Thêm mới Employee", "Create", new { area = "" }, new { @class = "btn btn-primary" })
            <a class="btn btn-secondary" id="exportLink">Xuất ra Excel</a>
        </p>
        <div>
            @using (Html.BeginForm("ImportExcelFile", "Employees", FormMethod.Post, new { enctype = "multipart/form-data" }))
            {
                <input type="file" name="file" />
                <input type="submit" value="Import file Excel" />
            }
        </div>

        <div class="">
            <br />
            @using (Html.BeginForm("Index", "Employees", FormMethod.Get))
            {
                @Html.TextBox("searchString", Model.SearchString as string) <input type="submit" value="Tìm kiếm" />
            }
            <br />

            <table class="table">
                <thead class="table-primary">
                    <tr>
                        <th>
                            @Html.DisplayName("Họ tên")
                        </th>
                        <th>
                            @Html.DisplayName("Ngày sinh")
                        </th>
                        <th>
                            @Html.DisplayName("Tuổi")
                        </th>
                        <th>
                            @Html.DisplayName("Nghề nghiệp")
                        </th>
                        <th>
                            @Html.DisplayName("Dân tộc")
                        </th>
                        <th>
                            @Html.DisplayName("Số điện thoại")
                        </th>
                        <th>
                            @Html.DisplayName("CCCD")
                        </th>
                        <th>
                            @Html.DisplayName("Số văn bằng")
                        </th>
                        <th></th>
                    </tr>
                </thead>


                <tbody>
                    @if (Model.Items.Count == 0)
                    {
                        <tr>
                            <td colspan="3" style="color:red;">
                                Không tìm thấy kết quả
                            </td>
                        </tr>
                    }
                    else
                    {
                        foreach (var item in Model.Items)
                        {
                            <tr>
                                <td>
                                    @Html.DisplayFor(i => item.Name)
                                </td>
                                <td>
                                    @Html.DisplayFor(i => item.DateOfBirth)
                                </td>
                                <td>
                                    @Html.DisplayFor(i => item.Age)
                                </td>
                                <td>
                                    @Html.DisplayFor(i => item.JobName)
                                </td>
                                <td>
                                    @Html.DisplayFor(i => item.EthnicityName)
                                </td>
                                <td>
                                    @Html.DisplayFor(i => item.PhoneNumber)
                                </td>
                                <td>
                                    @Html.DisplayFor(i => item.IdCard)
                                </td>
                                <td>
                                    @Html.DisplayFor(i => item.NumberDegree)
                                </td>
                                <td>
                                    @Html.ActionLink("Cập nhập", "Edit", new { id = item.Id }, new { @class = "btn btn-success btn-sm" })
                                    @Html.ActionLink("Chi tiết", "Details", new { id = item.Id }, new { @class = "btn btn-info btn-sm" })
                                    @Html.ActionLink("Xóa", "Delete", new { employeeId = item.Id }, new { @class = "btn btn-danger btn-sm" })
                                    @Html.ActionLink("TT Văn bằng", "EmployeeQualifications", "Qualifications", new { id = item.Id }, new { @class = "btn btn-info btn-sm" })
                                </td>
                            </tr>
                        }
                    }
                </tbody>
            </table>
            @Html.PagedListPager(Model, pageIndex => Url.Action("Index", new { pageIndex, pageSize = Model.PageSize, searchString = Model.SearchString }))
        </div>
    </div>
</div>

@section Scripts {
    <script>
        document.getElementById('exportLink').addEventListener('click', function () {
            exportExcel();
        });

        function exportExcel() {
            const searchString = '@Model.SearchString';
            fetch('/api/getapi/ExportEmployeesData?searchString=' + searchString)
                .then(response => {
                    if (response.ok) {
                        toastr.options = {
                            "positionClass": "toast-top-right"
                        };
                        toastr.success('Xuất file Excel thành công');
                    }
                    else {
                        toastr.options = {
                            "positionClass": "toast-top-right"
                        };
                        toastr.error('Có lỗi xảy ra');
                    }
                })
                .catch(error => console.error('Error:', error));
        }

    </script>
}